{"version":3,"file":"static/js/674.7c4faf8c.chunk.js","mappings":"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","sources":["componentes/cajaoferta.js","componentes/footer.js","componentes/paginacion.js","paginas/carreras.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Ubi from '../imagenes/ubi.avif';  \r\nimport Indeed from '../imagenes/indeed.avif';  \r\nimport Convocatorias from '../imagenes/convocatorias_2024.avif';\r\nimport Buscojobs from '../imagenes/buscojobs.avif';\r\nimport Linkedin from '../imagenes/Linkedin.avif';\r\nimport Computrabajo from '../imagenes/computrabajo.avif';\r\nimport Bumeran from '../imagenes/bumeran.avif';\r\n\r\nimport './estiloscomponentes.css';\r\n\r\nconst plataformaImages = {\r\n    Indeed,\r\n    'Convocatorias de Trabajo': Convocatorias,\r\n    Buscojobs,\r\n    Linkedin,\r\n    Computrabajo,\r\n    Bumeran,\r\n};\r\n\r\nconst CajaOferta = ({ oferta_laboral }) => {\r\n    const [copied, setCopied] = useState(false);\r\n\r\n    const handleButtonClick = (e) => {\r\n        e.stopPropagation(); \r\n\r\n        if (oferta_laboral.plataforma === 'Computrabajo') {\r\n            navigator.clipboard.writeText(oferta_laboral.link_pagina)\r\n                .then(() => {\r\n                    setCopied(true);\r\n                    setTimeout(() => setCopied(false), 2000); \r\n                })\r\n                .catch(err => console.error('Error al copiar el enlace', err));\r\n        } else {\r\n            window.open(oferta_laboral.link_pagina, '_blank');\r\n        }\r\n    };\r\n\r\n    const capitalizeFirstLetter = (text) => {\r\n        if (!text) return ''; \r\n        return text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\r\n    };\r\n\r\n    const platformImage = plataformaImages[oferta_laboral.plataforma];\r\n\r\n    return (\r\n        <div className='boxcajaoferta'>\r\n            <h2>{capitalizeFirstLetter(oferta_laboral.nom_oferta)}</h2>\r\n            <div className='division'></div>\r\n            <div className='empresa'>\r\n                <h3>{capitalizeFirstLetter(oferta_laboral.nom_empresa)}</h3>\r\n            </div>\r\n            <div className='lugar'>\r\n                <img src={Ubi} alt=\"Ubicación\" />\r\n                <h3>{oferta_laboral.lugar}</h3>\r\n            </div>\r\n            <div className='foto_plataforma'>\r\n                {platformImage && (\r\n                    <img src={platformImage} alt={`Logo ${oferta_laboral.plataforma}`} />\r\n                )}\r\n            </div>\r\n\r\n            <button className='btn-official' onClick={handleButtonClick}>\r\n                {oferta_laboral.plataforma === 'Computrabajo' ? 'Copiar enlace' : 'Postular aquí'}\r\n            </button>\r\n\r\n            {copied && (\r\n                <div style={{\r\n                    backgroundColor: '#48b72f', \r\n                    color: 'white',\r\n                    padding: '20px',\r\n                    borderRadius: '5px',\r\n                    position: 'fixed',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)', \r\n                    zIndex: 1000, \r\n                    transition: 'opacity 0.5s',\r\n                    opacity: copied ? 1 : 0,\r\n                }}>\r\n                    ¡Enlace Copiado!\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nCajaOferta.propTypes = {\r\n    oferta_laboral: PropTypes.shape({\r\n        nom_oferta: PropTypes.string.isRequired,\r\n        nom_empresa: PropTypes.string.isRequired,\r\n        lugar: PropTypes.string.isRequired,\r\n        link_pagina: PropTypes.string.isRequired,\r\n        plataforma: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default CajaOferta;\r\n","import React from 'react'\r\nimport './estiloscomponentes.css'\r\n\r\nfunction footer() {\r\n  return (\r\n    <div className='footer'>\r\n        © Practicas Universitarias - Peru 2024\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default footer\r\n","import React, { useState, useEffect } from 'react';\r\nimport './estiloscomponentes.css'\r\n\r\nfunction Paginacion({ paginaActual, totalPaginas, onCambiarPagina }) {\r\n    const [rangoDePaginacion, setRangoDePaginacion] = useState(5);\r\n    useEffect(() => {\r\n        const ajustarRangoPaginacion = () => {\r\n            if (window.innerWidth <= 768) {\r\n                setRangoDePaginacion(3); \r\n            } else {\r\n                setRangoDePaginacion(9); \r\n            }\r\n        };\r\n        ajustarRangoPaginacion();\r\n\r\n        window.addEventListener('resize', ajustarRangoPaginacion);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', ajustarRangoPaginacion);\r\n        };\r\n    }, []);\r\n\r\n    const generarNumerosPagina = () => {\r\n        let paginas = [];\r\n        const startPage = Math.max(1, paginaActual - Math.floor(rangoDePaginacion / 2));\r\n        const endPage = Math.min(startPage + rangoDePaginacion - 1, totalPaginas);\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            paginas.push(i);\r\n        }\r\n\r\n        return paginas;\r\n    };\r\n\r\n    return (\r\n        <div className=\"paginacion\">\r\n            <button\r\n                onClick={() => onCambiarPagina(paginaActual - 1)}\r\n                disabled={paginaActual === 1}\r\n            >\r\n                Anterior\r\n            </button>\r\n            <div className=\"numero-pagina\">\r\n                {generarNumerosPagina().map((num, index) =>\r\n                    num === '...' ? (\r\n                        <span key={index} className=\"puntos-suspensivos\">...</span>\r\n                    ) : (\r\n                        <button\r\n                            key={index}\r\n                            className={num === paginaActual ? 'active' : ''}\r\n                            onClick={() => onCambiarPagina(num)}\r\n                        >\r\n                            {num}\r\n                        </button>\r\n                    )\r\n                )}\r\n            </div>\r\n            <button\r\n                onClick={() => onCambiarPagina(paginaActual + 1)}\r\n                disabled={paginaActual === totalPaginas}\r\n            >\r\n                Siguiente\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginacion;","import React, { useEffect, useMemo, useState, useCallback } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select'; \r\nimport CajaOferta from '../componentes/cajaoferta';\r\nimport Paginacion from '../componentes/paginacion';\r\nimport Footer from '../componentes/footer';\r\nimport '../componentes/estiloscomponentes.css'\r\n\r\nfunction Carreras() {\r\n    const { carrera } = useParams();\r\n    const navigate = useNavigate();\r\n    const [ofertas, setOfertas] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedCarrera, setSelectedCarrera] = useState(carrera || \"Administración\");\r\n    const [paginaActual, setPaginaActual] = useState(1);\r\n    const [totalOfertas, setTotalOfertas] = useState(0);\r\n    const [ofertasPorPagina] = useState(14);\r\n    const [ofertasCache, setOfertasCache] = useState({});  \r\n\r\n    const diccionarios = useMemo(() => ({\r\n        Administración: ['administracion', 'Administrador', 'logistica', 'nominas', 'creditos y cobranzas', 'comercial', 'costos', 'planeamiento', 'trade'],\r\n        Arquitectura: ['Arquitectura'],\r\n        Biología: ['Biologia', 'Microbiologia'],\r\n        Ciencia_de_la_Computación: ['Ciencia de la Computacion', 'programacion', 'base de datos', 'Ciberseguridad', 'cloud', 'programador', 'estructuras de datos'],\r\n        Ciencia_Política: ['Politica'],\r\n        Ciencias_de_la_Comunicación: ['comunicacion', 'Periodismo', 'Audiovisuales', 'relaciones publicas', 'comunicador social', 'redes sociales', 'comunicador', 'periodista'],\r\n        Contabilidad: ['Contabilidad', 'impuestos', 'contable', 'costos', 'creditos y cobranzas'],\r\n        Derecho: ['Derecho', 'abogado', 'litigio', 'legal', 'abogada'],\r\n        Economía: ['Economia', 'finanzas', 'mercado', 'inversion', 'nominas', 'creditos y cobranzas', 'comercial'],\r\n        Educación: ['Educacion', 'docente', 'profesor', 'profesora'],\r\n        Enfermería: ['Enfermeria', 'enfermera'],\r\n        Estadística: ['Estadistica'],\r\n        Farmacia_y_Bioquímica: ['farmacia', 'bioquimica', 'laboratorio'],\r\n        Gastronomía: ['Gastronomia', 'gastronomica', 'gastronomico', 'cocinero', 'cocinera', 'cocina'],\r\n        Hotelería_y_Turismo: ['Hoteleria', 'turismo', 'turistico'],\r\n        Ingeniería_Agrícola: ['Ingenieria Agricola', 'Ingeniero Agronomo', 'agronomia', 'agronomo', 'agronomia', 'agroindustrial', 'Ingenieria Agronoma'],\r\n        Ingeniería_Ambiental: ['Ingenieria Ambiental', 'ambiental', 'SHEQ'],\r\n        Ingeniería_de_Industrias_alimentarias: ['alimentaria'],\r\n        Ingeniería_Civil: ['Ingenieria Civil', 'civil', 'urbano', 'urbana'],\r\n        Ingeniería_de_Minas: ['Ingeniería de Minas', 'mina', 'mineria', 'minero', 'SHEQ'],\r\n        Ingeniería_de_Sistemas: ['Ingeniería de Sistemas', 'Ingeniero de sistemas', 'Ing Sistemas', 'Ing. sistemas', 'react', 'programación', 'angular', 'sql', 'data', 'devops', ' ti ', 'php', 'soporte tecnico', 'Seguridad de la Informacion', 'Analisis De Datos', 'cloud', 'Data Analytics', 'Mysql'],\r\n        Ingeniería_Eléctrica: ['electrica', 'electricista', 'Transformadores', 'electronica', 'electronico', 'ING. ELECTRICA'],\r\n        Ingeniería_Industrial: ['Ingenieria Industrial', 'Industrial', 'Ing industrial', 'Ing. Industrial', 'logistica', 'nominas', 'creditos y cobranzas', 'comercial', 'costos', 'planeamiento', 'trade'],\r\n        Ingeniería_Mecánica: ['mecanica', 'mecanico'],\r\n        Ingeniería_Mecatrónica: ['mecatronica', 'mecatronica'],\r\n        Ingeniería_Química: ['quimica', 'quimico'],\r\n        Marketing: ['Marketing', 'Publicidad', ' marca ', 'Branding', 'trade'],\r\n        Medicina: ['Medicina'],\r\n        Medicina_Veterinaria: ['Veterinaria', 'veterinario', 'zootecnia'],\r\n        Negocios_Internacionales: ['Negocios Internacionales', 'comercio', 'exportacion', 'comercial', 'aduanas', 'logistica'],\r\n        Nutrición: ['Nutricion'],\r\n        Odontología: ['Odontologia', 'dental'],\r\n        Psicología: ['Psicologia', 'psicologo', 'psicologa', 'seleccion'],\r\n        Publicidad_y_multimedia: ['publicidad', 'multimedia'],\r\n        Recursos_Humanos: ['Recursos humanos', 'seleccion'],\r\n        Ventas: ['Ventas'],\r\n        Almacén: ['almacen', 'inventarios', 'carga'],\r\n        Diseñador_Grafico: ['diseñador grafico', 'grafico', 'diseño gráfico'],\r\n    }), []);\r\n\r\n    const fetchOfertas = useCallback(async (carre) => {\r\n        setLoading(true);\r\n        setError(null);\r\n\r\n        if (ofertasCache[carre]) {\r\n            setOfertas(ofertasCache[carre]);\r\n            setTotalOfertas(ofertasCache[carre].length);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        const palabrasClave = diccionarios[carre]?.join('|') || '';\r\n        try {\r\n            const response = await axios.get(`https://buscadorempleos.onrender.com/selecionarcarrera/${palabrasClave}`);\r\n            setOfertas(response.data);\r\n            setTotalOfertas(response.data.length);\r\n            setPaginaActual(1);\r\n            setOfertasCache(prevCache => ({\r\n                ...prevCache,\r\n                [carre]: response.data\r\n            }));\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [diccionarios, ofertasCache]);\r\n\r\n    useEffect(() => {\r\n        if (carrera) {\r\n            fetchOfertas(carrera);\r\n        } else {\r\n            navigate(`/carreras/Administracion`);\r\n        }\r\n    }, [carrera, fetchOfertas, navigate]);\r\n\r\n    const handleButtonClick = (carre) => {\r\n        setSelectedCarrera(carre);\r\n        navigate(`/carreras/${carre}`);\r\n        fetchOfertas(carre);\r\n    };\r\n    const handleLinkSeleccionado = useCallback(link => console.log(\"Link seleccionado:\", link), []);\r\n\r\n    const handleCambiarPagina = useCallback(nuevaPagina => setPaginaActual(nuevaPagina), []);\r\n    const totalPaginas = useMemo(() => Math.ceil(totalOfertas / ofertasPorPagina), [totalOfertas, ofertasPorPagina]);\r\n\r\n    const indexOfLastOffer = paginaActual * ofertasPorPagina;\r\n    const indexOfFirstOffer = indexOfLastOffer - ofertasPorPagina;\r\n    const ofertasMostradas = useMemo(() => ofertas.slice(indexOfFirstOffer, indexOfLastOffer), [ofertas, indexOfFirstOffer, indexOfLastOffer]);\r\n\r\n    const carrerasKeys = Object.keys(diccionarios);\r\n\r\n    const opcionesCarreras = carrerasKeys.map(carrera => ({\r\n        value: carrera,\r\n        label: carrera.replace(/_/g, ' ')\r\n    }));\r\n\r\n    return (\r\n        <div>\r\n            <div className='btn_departamentos amtah'>\r\n                <div className='desktop-buttons'>\r\n                    {carrerasKeys.map((carre, index) => (\r\n                        <button\r\n                            key={index}\r\n                            onClick={() => handleButtonClick(carre)}\r\n                            className={`carrera-button ${selectedCarrera === carre ? 'active' : ''}`}\r\n                        >\r\n                            {carre.replace(/_/g, ' ')}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className='selectores mobile-dropdown'>\r\n                    <Select\r\n                        value={opcionesCarreras.find(option => option.value === selectedCarrera)} \r\n                        onChange={(selectedOption) => handleButtonClick(selectedOption.value)} \r\n                        options={opcionesCarreras} \r\n                        className=\"select-lugar\" \r\n                        classNamePrefix=\"select-lugar\" \r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <h1 style={{ textAlign: 'center' }}>Ofertas Laborales en <span style={{ color: '#2ab004', textTransform: 'capitalize' }}>{selectedCarrera.replace(/_/g, ' ')}</span></h1>\r\n            <div style={{ textAlign: 'center' }}>{totalOfertas.toLocaleString('es-PE')} Empleos Vigentes</div>\r\n\r\n            <div className='contenidoprincipal'>\r\n                <div className='contenedordecajas'>\r\n                    {loading && <div className=\"loading\"><div className=\"spinner\" style={{ marginBottom: '900px',marginTop:'100px' }}></div></div>}\r\n                    {error && <p>Error al cargar las ofertas: {error.message}</p>}\r\n                    {ofertasMostradas.length > 0 ? (\r\n                        ofertasMostradas.map((oferta, index) => (\r\n                            <CajaOferta \r\n                            key={index} \r\n                            oferta_laboral={oferta} \r\n                            navigateToLink={handleLinkSeleccionado}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        !loading && <p>No se encontraron ofertas para esta carrera.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            {totalPaginas > 1 &&\r\n                <Paginacion totalPaginas={totalPaginas}\r\n                    paginaActual={paginaActual}\r\n                    onCambiarPagina={handleCambiarPagina} />}\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Carreras;\r\n"],"names":["plataformaImages","Indeed","Convocatorias","Buscojobs","Linkedin","Computrabajo","Bumeran","_ref","oferta_laboral","copied","setCopied","useState","capitalizeFirstLetter","text","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","platformImage","plataforma","_jsxs","className","children","_jsx","nom_oferta","nom_empresa","src","Ubi","alt","lugar","concat","onClick","e","stopPropagation","navigator","clipboard","writeText","link_pagina","then","setTimeout","catch","err","console","error","window","open","style","backgroundColor","color","padding","borderRadius","position","top","left","transform","zIndex","transition","opacity","paginaActual","totalPaginas","onCambiarPagina","rangoDePaginacion","setRangoDePaginacion","useEffect","ajustarRangoPaginacion","innerWidth","addEventListener","removeEventListener","disabled","generarNumerosPagina","paginas","startPage","Math","max","floor","endPage","min","i","push","num","index","carrera","useParams","navigate","useNavigate","ofertas","setOfertas","loading","setLoading","setError","selectedCarrera","setSelectedCarrera","setPaginaActual","totalOfertas","setTotalOfertas","ofertasPorPagina","ofertasCache","setOfertasCache","diccionarios","useMemo","Administración","Arquitectura","Biología","Ciencia_de_la_Computación","Ciencia_Política","Ciencias_de_la_Comunicación","Contabilidad","Derecho","Economía","Educación","Enfermería","Estadística","Farmacia_y_Bioquímica","Gastronomía","Hotelería_y_Turismo","Ingeniería_Agrícola","Ingeniería_Ambiental","Ingeniería_de_Industrias_alimentarias","Ingeniería_Civil","Ingeniería_de_Minas","Ingeniería_de_Sistemas","Ingeniería_Eléctrica","Ingeniería_Industrial","Ingeniería_Mecánica","Ingeniería_Mecatrónica","Ingeniería_Química","Marketing","Medicina","Medicina_Veterinaria","Negocios_Internacionales","Nutrición","Odontología","Psicología","Publicidad_y_multimedia","Recursos_Humanos","Ventas","Almacén","Diseñador_Grafico","fetchOfertas","useCallback","async","_diccionarios$carre","carre","length","palabrasClave","response","axios","get","data","prevCache","handleButtonClick","handleLinkSeleccionado","link","log","handleCambiarPagina","nuevaPagina","ceil","indexOfLastOffer","indexOfFirstOffer","ofertasMostradas","carrerasKeys","Object","keys","opcionesCarreras","value","label","replace","Select","find","option","onChange","selectedOption","options","classNamePrefix","textAlign","textTransform","toLocaleString","marginBottom","marginTop","message","oferta","CajaOferta","navigateToLink","Paginacion","Footer"],"sourceRoot":""}