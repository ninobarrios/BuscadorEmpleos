{"version":3,"file":"static/js/559.cda800d5.chunk.js","mappings":"qLAOA,MAAMA,GAAaC,EAAAA,EAAAA,OAAK,IAAM,+BACxBC,GAAaD,EAAAA,EAAAA,OAAK,IAAM,+BACxBE,GAASF,EAAAA,EAAAA,OAAK,IAAM,+BAEpBG,EAAe,CAAC,EA6HtB,EA3HsBC,KAClB,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,KACnBC,GAAWC,EAAAA,EAAAA,OACVC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,KAChCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAsBC,IAA2BN,EAAAA,EAAAA,UAASN,GAAgB,aAC1Ea,EAAcC,IAAmBR,EAAAA,EAAAA,UAAS,IAC1CS,EAAcC,IAAmBV,EAAAA,EAAAA,UAAS,GAG3CW,EAAgB,CAClB,WAAY,YAAU,cAAY,WAAY,WAAY,YAC1D,SAAU,QAAS,eAAgB,aAAW,MAAO,WACrD,cAAe,aAAc,OAAQ,SAAU,gBAC/C,WAAY,QAAS,QAAS,OAAQ,gBAAc,QACpD,SAAU,WAGRC,GAAeC,EAAAA,EAAAA,cAAYC,UAC7B,GAAItB,EAAauB,GAAM,CACnB,MAAMC,EAAgBxB,EAAauB,GAInC,OAHAhB,EAAWiB,GACXN,EAAgBM,EAAcC,aAC9BT,EAAgB,EAEpB,CAEAN,GAAW,GACXE,EAAS,MACT,IACI,MAAMc,QAAiBC,EAAAA,EAAMC,IAAI,+DAADC,OAAgEN,IAChGvB,EAAauB,GAAOG,EAASI,KAC7BvB,EAAWmB,EAASI,MACpBZ,EAAgBQ,EAASI,KAAKL,QAC9BT,EAAgB,EACpB,CAAE,MAAOL,GACLoB,QAAQpB,MAAM,uBAAwBA,GACtCC,EAASD,EACb,CAAC,QACGD,GAAW,EACf,IACD,KAEHsB,EAAAA,EAAAA,YAAU,KACF9B,EACAkB,EAAalB,GAEbE,EAAS,0BACb,GACD,CAACF,EAAckB,EAAchB,IAEhC,MAAM6B,EAA4BV,IAC9BT,EAAwBS,GACxBnB,EAAS,kBAADyB,OAAmBN,IAC3BH,EAAaG,EAAI,EAIfW,GAAsBb,EAAAA,EAAAA,cAAYc,GAAenB,EAAgBmB,IAAc,IAE/EC,GAAeC,EAAAA,EAAAA,UAAQ,IAAMC,KAAKC,KAAKtB,EApDpB,KAoDsD,CAACA,IAC1EuB,EArDmB,GAqDAzB,EACnB0B,EAAoBD,EAtDD,GAuDnBE,GAAmBL,EAAAA,EAAAA,UAAQ,IAAM/B,EAAQqC,MAAMF,EAAmBD,IAAmB,CAAClC,EAASmC,EAAmBD,IAClHI,EAAUzB,EAAc0B,KAAItB,IAAG,CAAOuB,MAAOvB,EAAKwB,MAAOxB,MAE/D,OACIyB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACID,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBD,SAAA,EAC9BE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,kBAAiBD,SAC3B9B,EAAc0B,KAAI,CAACtB,EAAK6B,KACrBD,EAAAA,EAAAA,KAAA,UAEIE,QAASA,IAAMpB,EAAyBV,GACxC2B,UAAS,kBAAArB,OAAoBhB,IAAyBU,EAAM,SAAW,IAAK0B,SAE3E1B,GAJI6B,QAQjBD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,6BAA4BD,UACvCE,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACHV,QAASA,EACTE,MAAOF,EAAQW,MAAKC,GAAUA,EAAOV,QAAUjC,IAC/C4C,SA3BQC,GAAmBzB,EAAyByB,EAAeZ,OA4BnEI,UAAU,eACVS,gBAAgB,uBAI5BX,EAAAA,EAAAA,MAAA,MAAIY,MAAO,CAAEC,UAAW,SAAUC,MAAO,MAAOC,OAAQ,YAAad,SAAA,CAAC,yBAC7CE,EAAAA,EAAAA,KAAA,QAAMS,MAAO,CAAEI,MAAO,UAAWC,cAAe,cAAehB,SAAEpC,QAE1FmC,EAAAA,EAAAA,MAAA,OAAKY,MAAO,CAAEC,UAAW,UAAWZ,SAAA,CAAEhC,EAAaiD,eAAe,SAAS,wBAE3Ef,EAAAA,EAAAA,KAAA,OAAKD,UAAU,qBAAoBD,UAC/BD,EAAAA,EAAAA,MAAA,OAAKE,UAAU,oBAAmBD,SAAA,CACjCxC,IAAW0C,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAASD,UAACE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAAUU,MAAO,CAAEO,aAAc,QAAQC,UAAU,aACtGzD,IAASqC,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,gCAA8BtC,EAAM0D,WAC5C3B,EAAiBjB,OAAS,EACvBiB,EAAiBG,KAAI,CAACyB,EAAQlB,KAC1BD,EAAAA,EAAAA,KAACvD,EAAU,CAA0B2E,eAAgBD,GAApCA,EAAOE,IAAMpB,MAGjC3C,IAAW0C,EAAAA,EAAAA,KAAA,KAAAF,SAAG,6DAI3BE,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,UAAUvB,EAAAA,EAAAA,KAAA,OAAAF,SAAK,0BAA4BA,UACjDE,EAAAA,EAAAA,KAACrD,EAAU,CACPiB,aAAcA,EACdqB,aAAcA,EACduC,gBAAiBzC,OAGzBiB,EAAAA,EAAAA,KAACsB,EAAAA,SAAQ,CAACC,UAAUvB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,UAASD,UAACE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAuBD,UAC/EE,EAAAA,EAAAA,KAACpD,EAAM,QAET,C","sources":["paginas/departamentos.js"],"sourcesContent":["import React, { useEffect, useMemo, useState, useCallback, Suspense, lazy } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport '../componentes/estiloscomponentes.css';\r\n\r\n// Lazy load components\r\nconst CajaOferta = lazy(() => import('../componentes/cajaoferta'));\r\nconst Paginacion = lazy(() => import('../componentes/paginacion'));\r\nconst Footer = lazy(() => import('../componentes/footer'));\r\n\r\nconst ofertasCache = {}; // Cache para almacenar ofertas\r\n\r\nconst Departamentos = () => {\r\n    const { departamento } = useParams();\r\n    const navigate = useNavigate();\r\n    const [ofertas, setOfertas] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [selectedDepartamento, setSelectedDepartamento] = useState(departamento || \"Arequipa\");\r\n    const [paginaActual, setPaginaActual] = useState(1);\r\n    const [totalOfertas, setTotalOfertas] = useState(0);\r\n    const ofertasPorPagina = 14; // Se puede dejar sin estado\r\n\r\n    const departamentos = [\r\n        \"Amazonas\", \"Áncash\", \"Apurímac\", \"Arequipa\", \"Ayacucho\", \"Cajamarca\",\r\n        \"Callao\", \"Cusco\", \"Huancavelica\", \"Huánuco\", \"Ica\", \"Junín\",\r\n        \"La Libertad\", \"Lambayeque\", \"Lima\", \"Loreto\", \"Madre de Dios\",\r\n        \"Moquegua\", \"Pasco\", \"Piura\", \"Puno\", \"San Martín\", \"Tacna\",\r\n        \"Tumbes\", \"Ucayali\"\r\n    ];\r\n\r\n    const fetchOfertas = useCallback(async (dep) => {\r\n        if (ofertasCache[dep]) {\r\n            const cachedOfertas = ofertasCache[dep];\r\n            setOfertas(cachedOfertas);\r\n            setTotalOfertas(cachedOfertas.length);\r\n            setPaginaActual(1);\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await axios.get(`https://buscadorempleos.onrender.com/selecionardepartamento/${dep}`);\r\n            ofertasCache[dep] = response.data;\r\n            setOfertas(response.data);\r\n            setTotalOfertas(response.data.length);\r\n            setPaginaActual(1);\r\n        } catch (error) {\r\n            console.error('Error fetching data:', error);\r\n            setError(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (departamento) {\r\n            fetchOfertas(departamento);\r\n        } else {\r\n            navigate(`/departamentos/Arequipa`);\r\n        }\r\n    }, [departamento, fetchOfertas, navigate]);\r\n\r\n    const handleDepartamentoChange = (dep) => {\r\n        setSelectedDepartamento(dep);\r\n        navigate(`/departamentos/${dep}`);\r\n        fetchOfertas(dep);\r\n    };\r\n\r\n    const handleSelectChange = (selectedOption) => handleDepartamentoChange(selectedOption.value);\r\n    const handleCambiarPagina = useCallback(nuevaPagina => setPaginaActual(nuevaPagina), []);\r\n\r\n    const totalPaginas = useMemo(() => Math.ceil(totalOfertas / ofertasPorPagina), [totalOfertas]);\r\n    const indexOfLastOffer = paginaActual * ofertasPorPagina;\r\n    const indexOfFirstOffer = indexOfLastOffer - ofertasPorPagina;\r\n    const ofertasMostradas = useMemo(() => ofertas.slice(indexOfFirstOffer, indexOfLastOffer), [ofertas, indexOfFirstOffer, indexOfLastOffer]);\r\n    const options = departamentos.map(dep => ({ value: dep, label: dep }));\r\n\r\n    return (\r\n        <div>\r\n            <div className='btn_departamentos'>\r\n                <div className='desktop-buttons'>\r\n                    {departamentos.map((dep, index) => (\r\n                        <button\r\n                            key={index}\r\n                            onClick={() => handleDepartamentoChange(dep)}\r\n                            className={`carrera-button ${selectedDepartamento === dep ? 'active' : ''}`}\r\n                        >\r\n                            {dep}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n                <div className='selectores mobile-dropdown'>\r\n                    <Select\r\n                        options={options}\r\n                        value={options.find(option => option.value === selectedDepartamento)}\r\n                        onChange={handleSelectChange}\r\n                        className='select-lugar' \r\n                        classNamePrefix=\"select-lugar\" \r\n                    />\r\n                </div>\r\n            </div>\r\n            <h1 style={{ textAlign: 'center', width: '70%', margin: '10px 15%' }}>\r\n                Ofertas Laborales en <span style={{ color: '#2ab004', textTransform: 'capitalize' }}>{selectedDepartamento}</span>\r\n            </h1>\r\n            <div style={{ textAlign: 'center' }}>{totalOfertas.toLocaleString('es-PE')} Empleos Vigentes</div>\r\n\r\n            <div className='contenidoprincipal'>\r\n                <div className='contenedordecajas'>\r\n                {loading && <div className=\"loading\"><div className=\"spinner\" style={{ marginBottom: '900px',marginTop:'100px' }}></div></div>}\r\n                {error && <p>Error al cargar las ofertas: {error.message}</p>}\r\n                    {ofertasMostradas.length > 0 ? (\r\n                        ofertasMostradas.map((oferta, index) => (\r\n                            <CajaOferta key={oferta.id || index} oferta_laboral={oferta} />\r\n                        ))\r\n                    ) : (\r\n                        !loading && <p>No hay ofertas disponibles para este departamento.</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Suspense fallback={<div>Loading pagination...</div>}>\r\n                <Paginacion\r\n                    paginaActual={paginaActual}\r\n                    totalPaginas={totalPaginas}\r\n                    onCambiarPagina={handleCambiarPagina}\r\n                />\r\n            </Suspense>\r\n            <Suspense fallback={<div className=\"loading\"><div className=\"spinner\"></div></div>}>\r\n                <Footer />\r\n            </Suspense>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Departamentos;"],"names":["CajaOferta","lazy","Paginacion","Footer","ofertasCache","Departamentos","departamento","useParams","navigate","useNavigate","ofertas","setOfertas","useState","loading","setLoading","error","setError","selectedDepartamento","setSelectedDepartamento","paginaActual","setPaginaActual","totalOfertas","setTotalOfertas","departamentos","fetchOfertas","useCallback","async","dep","cachedOfertas","length","response","axios","get","concat","data","console","useEffect","handleDepartamentoChange","handleCambiarPagina","nuevaPagina","totalPaginas","useMemo","Math","ceil","indexOfLastOffer","indexOfFirstOffer","ofertasMostradas","slice","options","map","value","label","_jsxs","children","className","_jsx","index","onClick","Select","find","option","onChange","selectedOption","classNamePrefix","style","textAlign","width","margin","color","textTransform","toLocaleString","marginBottom","marginTop","message","oferta","oferta_laboral","id","Suspense","fallback","onCambiarPagina"],"sourceRoot":""}