{"version":3,"file":"static/js/560.ca37379d.chunk.js","mappings":"2jBAcA,MAAMA,EAAmB,CACrBC,OAAM,EACN,2BAA4BC,EAC5BC,UAAS,EACTC,SAAQ,EACRC,aAAY,EACZC,QACJ,GA+EA,EA7EmBC,IAAyB,IAAxB,eAAEC,GAAgBD,EAkBlC,MAAME,EAAyBC,GACtBA,EACEA,EAAKC,MAAM,KAAKC,KAAIC,GAAQA,EAAKC,OAAO,GAAGC,cAAgBF,EAAKG,MAAM,GAAGC,gBAAeC,KAAK,KADlF,GAIhBC,EAAgBnB,EAAiBQ,EAAeY,YAEtD,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAAD,SAAKd,EAAsBD,EAAeiB,eAC1CD,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAA,MAAAD,SAAKd,EAAsBD,EAAekB,kBAE9CL,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,OAAKG,IAAKC,EAAKC,IAAI,kBACnBL,EAAAA,EAAAA,KAAA,MAAAD,SAAKf,EAAesB,YAExBN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,kBAAiBC,SAC3BJ,IACGK,EAAAA,EAAAA,KAAA,OAAKG,IAAKR,EAAeU,IAAG,QAAAE,OAAUvB,EAAeY,kBAyB3D,C,4EC3Ed,QARA,WACE,OACEI,EAAAA,EAAAA,KAAA,OAAKF,UAAU,SAAQC,SAAC,6CAI5B,C,gFC0DA,QAhEA,SAAmBhB,GAAmD,IAAlD,aAAEyB,EAAY,aAAEC,EAAY,gBAAEC,GAAiB3B,EAC/D,MAAO4B,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,GA8B3D,OA7BAC,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAyBA,KACvBC,OAAOC,YAAc,IACrBL,EAAqB,GAErBA,EAAqB,EACzB,EAMJ,OAJAG,IAEAC,OAAOE,iBAAiB,SAAUH,GAE3B,KACHC,OAAOG,oBAAoB,SAAUJ,EAAuB,CAC/D,GACF,KAeClB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,UACIoB,QAASA,IAAMV,EAAgBF,EAAe,GAC9Ca,SAA2B,IAAjBb,EAAmBT,SAChC,cAGDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SApBTuB,MACzB,IAAIC,EAAU,GACd,MAAMC,EAAYC,KAAKC,IAAI,EAAGlB,EAAeiB,KAAKE,MAAMhB,EAAoB,IACtEiB,EAAUH,KAAKI,IAAIL,EAAYb,EAAoB,EAAGF,GAE5D,IAAK,IAAIqB,EAAIN,EAAWM,GAAKF,EAASE,IAClCP,EAAQQ,KAAKD,GAGjB,OAAOP,CAAO,EAYLD,GAAuBlC,KAAI,CAAC4C,EAAKC,IACtB,QAARD,GACIhC,EAAAA,EAAAA,KAAA,QAAkBF,UAAU,qBAAoBC,SAAC,OAAtCkC,IAEXjC,EAAAA,EAAAA,KAAA,UAEIF,UAAWkC,IAAQxB,EAAe,SAAW,GAC7CY,QAASA,IAAMV,EAAgBsB,GAAKjC,SAEnCiC,GAJIC,QASrBjC,EAAAA,EAAAA,KAAA,UACIoB,QAASA,IAAMV,EAAgBF,EAAe,GAC9Ca,SAAUb,IAAiBC,EAAaV,SAC3C,gBAKb,C,2ECKA,QAlEA,SAAmBhB,GAA+E,IAA9E,cAAEmD,EAAa,gBAAEC,EAAe,SAAEC,EAAQ,MAAE9B,EAAK,QAAE+B,EAAO,cAAEC,GAAevD,EAE3F,MAAMwD,EAAqB,CAAEC,MAAO,GAAIC,MAAO,4BACzCC,EAAuB,CAAEF,MAAO,GAAIC,MAAO,wBAE3CE,EAAiB,CAACJ,KAAuBD,EAAclD,KAAIwD,IAAG,CAAOJ,MAAOI,EAAKH,MAAOG,OAGxFC,EAAkB,CACpBH,KACGN,EACEU,QAAOC,GAAOA,GAAsB,KAAfA,EAAIC,SACzB5D,KAAI2D,IAAG,CAAOP,MAAOO,EAAKN,MAAOM,OAGpCE,EAAe,CACjBC,QAASA,CAACC,EAAUC,KAAK,IAClBD,EACHE,YAAaD,EAAME,UAAY,UAAY,UAC3CC,UAAWH,EAAME,UAAY,oBAAsB,KACnD,UAAW,CACPD,YAAa,aAGrBG,KAAOL,IAAQ,IACRA,EACHM,OAAQ,OAEZC,OAAQA,CAACP,EAAUC,KAAK,IACjBD,EACHQ,gBAAiBP,EAAMQ,WAAa,UAAYR,EAAME,UAAY,UAAYH,EAASQ,gBACvFE,MAAOT,EAAMQ,WAAa,QAAUT,EAASU,MAC7C,UAAW,CACPF,gBAAiB,cAK7B,OACJ9D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,CACHC,GAAG,eACHjE,UAAU,eACVkE,OAAQf,EACRgB,QAAStB,EACTH,MAAOG,EAAeuB,MAAKR,GAAUA,EAAOlB,QAAUlC,KAAUiC,EAChE4B,SAAWC,GAAmBlC,EAAckC,EAAe5B,OAC3D6B,YAAY,sBACZ,aAAW,yBAGfrE,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,CACHC,GAAG,iBACHjE,UAAU,eACVkE,OAAQf,EACRgB,QAASpB,EACTL,MAAOK,EAAgBqB,MAAKR,GAAUA,EAAOlB,QAAUH,KAAYK,EACnEyB,SAAWC,GAAmBjC,EAAgBiC,EAAe5B,OAC7D6B,YAAY,yBACZ,aAAW,6BAKnB,C,wHCiCA,QAjGA,SAAiBtF,GAA+B,IAA9B,SAAEuF,EAAQ,cAAEC,GAAexF,EACzC,MAAOyF,EAAcC,IAAmB5D,EAAAA,EAAAA,UAAS,KAC1C6D,EAAaC,IAAkB9D,EAAAA,EAAAA,UAAS,KACxC+D,EAAoBC,IAAyBhE,EAAAA,EAAAA,WAAS,GACvDiE,GAAWC,EAAAA,EAAAA,QAAO,MAClBC,GAAiBD,EAAAA,EAAAA,QAAO,MAyCxBE,EAAsBC,IAEpBJ,EAASK,UAAYL,EAASK,QAAQC,SAASF,EAAMG,SACrDL,EAAeG,UAAYH,EAAeG,QAAQC,SAASF,EAAMG,SAEjER,GAAsB,EAC1B,EAUJ,OAPA/D,EAAAA,EAAAA,YAAU,KACNwE,SAASpE,iBAAiB,YAAa+D,GAChC,KACHK,SAASnE,oBAAoB,YAAa8D,EAAmB,IAElE,KAGCpF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACrBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,kBAAcC,EAAAA,EAAAA,KAAA,QAAMuF,MAAO,CAAE1B,MAAO,WAAY9D,SAAC,gBACrDF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBC,SAAA,EAG/BF,EAAAA,EAAAA,MAAA,OAAK2F,IAAKV,EAAS/E,SAAA,EACfC,EAAAA,EAAAA,KAAA,SACIF,UAAU,sBACV2F,KAAK,OACLjD,MAAOgC,EACPL,SA1CEuB,IAClB,MAAMlD,EAAQkD,EAAEL,OAAO7C,MACvBiC,EAAgBjC,GA1BKmD,WACrB,GAAIC,EAAMC,OAAS,EACf,IACI,MAGMC,SAHiBC,EAAAA,EAAMC,IAAI,mDAAoD,CACjFC,OAAQ,CAAEC,QAASN,MAEYO,KACnCxB,EAAemB,GACfjB,EAAsBiB,EAAkBD,OAAS,GAE7CtB,GACAA,EAAcuB,EAEtB,CAAE,MAAOM,GACLC,QAAQD,MAAM,8BAA+BA,GAC7CzB,EAAe,IACfE,GAAsB,EAC1B,MAEAF,EAAe,IACfE,GAAsB,EAC1B,EAMAyB,CAAiB9D,EAAM,EAwCP+D,WAAab,IACK,UAAVA,EAAEc,KACFlC,EAASE,EACb,EAEJH,YAAY,0BAEfO,IACG5E,EAAAA,EAAAA,KAAA,MAAIF,UAAU,cAAc0F,IAAKR,EAAejF,SAC3C2E,EAAYtF,KAAI,CAACqH,EAAYxE,KAC1BjC,EAAAA,EAAAA,KAAA,MAAgBoB,QAASA,IA/CtBqF,KAC3BJ,QAAQK,IAAI,2BAA4BD,GACxChC,EAAgBgC,GAChB5B,GAAsB,GAClBP,GACAA,EAASmC,EACb,EAyCuDE,CAAsBF,GAAY1G,SAC5D0G,GADIxE,WAOzBjC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,oBAAoBsB,QAASA,IAAMkD,EAASE,GAAczE,SAAC,gBAI7F,E,cCpCA,QA3DA,WACI,MAAO6G,EAAQC,IAAahG,EAAAA,EAAAA,UAAS,IAC9BiG,EAASC,IAAclG,EAAAA,EAAAA,UAAS,IAChCmG,EAASC,IAAcpG,EAAAA,EAAAA,UAAS,IAChCqG,EAASC,IAActG,EAAAA,EAAAA,WAAS,IAChCuF,EAAOgB,IAAYvG,EAAAA,EAAAA,UAAS,MA0BnC,OAxBAC,EAAAA,EAAAA,YAAU,KACiB6E,WACnBwB,GAAW,GACX,IACI,MAAOE,EAAqBC,EAAgBC,SAAuBC,QAAQC,IAAI,CAC3E1B,EAAAA,EAAMC,IAAI,uEACVD,EAAAA,EAAMC,IAAI,kEACVD,EAAAA,EAAMC,IAAI,mEAGda,EAAUQ,EAAoBlB,KAAKuB,OAAS,GAC5CX,EAAWO,EAAenB,KAAKuB,OAAS,GACxCT,EAAWM,EAAcpB,KAAKuB,OAAS,EAC3C,CAAE,MAAOC,GACLtB,QAAQD,MAAM,gCAAiCuB,GAC/CP,EAAS,+DACb,CAAC,QACGD,GAAW,EACf,GAGJS,EAAgB,GACjB,IAECV,GACOlH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAAUyF,MAAO,CAAEsC,OAAQ,QAAS9H,UAACC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAG1EsG,GACOpG,EAAAA,EAAAA,KAAA,KAAAD,SAAIqG,KAIXpG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,sBAAqBC,UAChCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKC,SAAA,EAChBC,EAAAA,EAAAA,KAAA,KAAAD,SAAI6G,EAAOkB,eAAe,YAC1B9H,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,SAAQC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,KAAAD,SAAI+G,EAAQgB,eAAe,YAC3B9H,EAAAA,EAAAA,KAAA,MAAAD,SAAI,+CAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOC,SAAA,EAClBC,EAAAA,EAAAA,KAAA,KAAAD,SAAIiH,EAAQc,eAAe,YAC3B9H,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8CAKxB,E,wBCmPA,QArSA,WACI,MAAOgI,EAAYC,IAAiBnH,EAAAA,EAAAA,UAAS,KACtCoH,EAAqBC,IAA0BrH,EAAAA,EAAAA,UAAS,KACxDqG,EAASC,IAActG,EAAAA,EAAAA,WAAS,IAChCuF,EAAOgB,IAAYvG,EAAAA,EAAAA,UAAS,OAC5BL,EAAc2H,IAAmBtH,EAAAA,EAAAA,UAAS,IAC1CuH,EAAcC,IAAmBxH,EAAAA,EAAAA,UAAS,IAC1CyH,EAAkBC,IAAuB1H,EAAAA,EAAAA,UAAS,KAClD2H,EAASC,IAAc5H,EAAAA,EAAAA,UAAS,CAAE2D,aAAc,GAAIlE,MAAO,GAAI+B,QAAS,GAAIqG,QAAS,KACtFC,GAAqBC,EAAAA,EAAAA,UAAQ,IAAM,CACrC,WAAY,OAAQ,QAAS,OAAQ,WAAY,WAAY,SAAU,WACvE,YAAa,SAAU,eAAgB,UAAW,MAAO,QAAS,cAClE,aAAc,SAAU,gBAAiB,WAAY,QAAS,QAAS,aACvE,QAAS,SAAU,UAAW,SAC/B,IACGC,EAAkB,CACpB,CAAErG,MAAO,GAAIC,MAAO,uBACpB,CAAED,MAAO,oBAAkBC,MAAO,qBAClC,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,cAAYC,MAAO,eAC5B,CAAED,MAAO,+BAA6BC,MAAO,gCAC7C,CAAED,MAAO,sBAAoBC,MAAO,uBACpC,CAAED,MAAO,iCAA+BC,MAAO,kCAC/C,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,uBAAqBC,MAAO,wBACrC,CAAED,MAAO,cAAYC,MAAO,eAC5B,CAAED,MAAO,eAAaC,MAAO,gBAC7B,CAAED,MAAO,gBAAcC,MAAO,iBAC9B,CAAED,MAAO,iBAAeC,MAAO,kBAC/B,CAAED,MAAO,2BAAyBC,MAAO,4BACzC,CAAED,MAAO,iBAAeC,MAAO,kBAC/B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,yBAAuBC,MAAO,0BACvC,CAAED,MAAO,4BAAuBC,MAAO,6CACvC,CAAED,MAAO,0BAAwBC,MAAO,2BACxC,CAAED,MAAO,sBAAoBC,MAAO,uBACpC,CAAED,MAAO,2CAAyCC,MAAO,0CACzD,CAAED,MAAO,yBAAuBC,MAAO,0BACvC,CAAED,MAAO,4BAA0BC,MAAO,6BAC1C,CAAED,MAAO,6BAAwBC,MAAO,8BACxC,CAAED,MAAO,2BAAyBC,MAAO,4BACzC,CAAED,MAAO,4BAAuBC,MAAO,6BACvC,CAAED,MAAO,+BAA0BC,MAAO,gCAC1C,CAAED,MAAO,2BAAsBC,MAAO,4BACtC,CAAED,MAAO,YAAaC,MAAO,aAC7B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,uBAAwBC,MAAO,wBACxC,CAAED,MAAO,2BAA4BC,MAAO,4BAC5C,CAAED,MAAO,eAAaC,MAAO,gBAC7B,CAAED,MAAO,iBAAeC,MAAO,kBAC/B,CAAED,MAAO,gBAAcC,MAAO,iBAC9B,CAAED,MAAO,0BAA2BC,MAAO,2BAC3C,CAAED,MAAO,mBAAoBC,MAAO,oBACpC,CAAED,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,aAAWC,MAAO,eAEzBqG,GAAyBF,EAAAA,EAAAA,UAAQ,IACb,IAAI,IAAIG,IAAId,EAAoB7I,KAAI4J,GACtDL,EAAmBzE,MAAK+E,GAAgBD,EAAO1I,MAAM4I,SAASD,SAE7CnG,OAAOqG,SAASC,MAAK,CAACC,EAAGC,IAAMD,EAAEE,cAAcD,MACrE,CAACrB,EAAqBU,KACzB7H,EAAAA,EAAAA,YAAU,KACN,MAAM0I,EAA0BA,KAC5BjB,EAAoBvH,OAAOC,YAAc,IAAM,GAAK,GAAG,EAI3D,OAFAuI,IACAxI,OAAOE,iBAAiB,SAAUsI,GAC3B,IAAMxI,OAAOG,oBAAoB,SAAUqI,EAAwB,GAC3E,KACH1I,EAAAA,EAAAA,YAAU,KACe6E,WACjBwB,GAAW,GACX,IACI,MAAMsC,QAAiB1D,EAAAA,EAAMC,IAAI,0DACjCgC,EAAcyB,EAAStD,MACvB+B,EAAuBuB,EAAStD,MAChCkC,EAAgBoB,EAAStD,KAAKN,QAC9BsC,EAAgB,EACpB,CAAE,MAAO/B,GACLC,QAAQD,MAAM,uBAAwBA,GACtCgB,EAAShB,EACb,CAAC,QACGe,GAAW,EACf,GAEJuC,EAAc,GACf,IACH,MAAMC,GAAoBf,EAAAA,EAAAA,UAAQ,IAC9B,IAAI,IAAIG,IAAId,EAAoB7I,KAAI4J,GAAUA,EAAO9I,iBACrD,CAAC+H,KAELnH,EAAAA,EAAAA,YAAU,KACoB8I,MACtB,MAAM,aAAEpF,EAAY,MAAElE,EAAK,QAAE+B,EAAO,QAAEqG,GAAYF,EAClD,IAAIqB,EAAY9B,EACZvD,IACAqF,EAAYA,EAAU/G,QAAOkG,GACzBA,EAAO/I,WAAWR,cAAcyJ,SAAS1E,EAAa/E,kBAG1Da,IACAuJ,EAAYA,EAAU/G,QAAOkG,GACzBA,EAAO1I,MAAMb,cAAcyJ,SAAS5I,EAAMb,kBAG9C4C,IACAwH,EAAYA,EAAU/G,QAAOkG,GACzBA,EAAO9I,YAAYT,cAAcyJ,SAAS7G,EAAQ5C,kBAG1D,MAAMqK,EAAe,CACjBC,oBAAgB,CAAC,iBAAkB,gBAAiB,YAAa,UAAW,uBAAwB,YAAa,SAAU,eAAgB,SAC3IC,aAAc,CAAC,gBACfC,cAAU,CAAC,WAAY,iBACvBC,+BAA2B,CAAC,4BAA6B,eAAgB,gBAAiB,iBAAkB,QAAS,cAAe,wBACpIC,sBAAkB,CAAC,YACnBC,iCAA6B,CAAC,eAAgB,aAAc,gBAAiB,sBAAuB,qBAAsB,iBAAkB,cAAe,cAC3JC,aAAc,CAAC,eAAgB,YAAa,WAAY,SAAU,wBAClEC,QAAS,CAAC,UAAW,UAAW,UAAW,QAAS,WACpDC,uBAAmB,CAAC,uBAAqB,UAAW,wBACpDC,cAAU,CAAC,WAAY,WAAY,UAAW,YAAa,UAAW,uBAAwB,aAC9FC,eAAW,CAAC,YAAa,UAAW,WAAY,aAChDC,gBAAY,CAAC,aAAc,aAC3BC,iBAAa,CAAC,eACdC,2BAAuB,CAAC,WAAY,aAAc,eAClDC,iBAAa,CAAC,cAAe,eAAgB,eAAgB,WAAY,WAAY,UACrFC,yBAAqB,CAAC,YAAa,UAAW,aAC9CC,4BAAqB,CAAC,sBAAuB,qBAAsB,YAAa,WAAY,YAAa,iBAAkB,uBAC3HC,0BAAsB,CAAC,uBAAwB,YAAa,QAC5DC,2CAAuC,CAAC,eACxCC,sBAAkB,CAAC,mBAAoB,QAAS,SAAU,UAC1DC,yBAAqB,CAAC,yBAAuB,OAAQ,UAAW,SAAU,QAC1EC,4BAAwB,CAAC,4BAA0B,wBAAyB,eAAgB,gBAAiB,QAAS,kBAAgB,UAAW,MAAO,OAAQ,SAAU,OAAQ,MAAO,kBAAmB,8BAA+B,oBAAqB,QAAS,iBAAkB,SAC3RC,6BAAsB,CAAC,YAAa,eAAgB,kBAAmB,cAAe,cAAe,kBACrGC,2BAAuB,CAAC,wBAAyB,aAAc,iBAAkB,kBAAmB,YAAa,UAAW,uBAAwB,YAAa,SAAU,eAAgB,SAC3LC,4BAAqB,CAAC,WAAY,YAClCC,+BAAwB,CAAC,cAAe,eACxCC,2BAAoB,CAAC,UAAW,WAChCC,UAAW,CAAC,YAAa,aAAc,UAAW,WAAY,SAC9DC,SAAU,CAAC,YACXC,qBAAsB,CAAC,cAAe,cAAe,aACrDC,yBAA0B,CAAC,2BAA4B,WAAY,cAAe,YAAa,UAAW,aAC1GC,eAAW,CAAC,aACZC,iBAAa,CAAC,cAAe,UAC7BC,gBAAY,CAAC,aAAc,YAAa,YAAa,aACrDC,wBAAyB,CAAC,aAAc,cACxCC,iBAAkB,CAAC,mBAAoB,aACvCC,OAAQ,CAAC,UACTC,aAAS,CAAC,UAAW,cAAe,UAEpC1D,IACAmB,EAAYA,EAAU/G,QAAOkG,IAAM,IAAAqD,EAAA,OACV,QADUA,EAC/BvC,EAAapB,UAAQ,IAAA2D,OAAA,EAArBA,EAAuBC,MAAKC,GACxBvD,EAAO/I,WAAWR,cAAcyJ,SAASqD,EAAK9M,gBACjD,KAGTyI,EAAuB2B,GACvBxB,EAAgBwB,EAAUhE,QAC1BsC,EAAgB,EAAE,EAEtByB,EAAmB,GACpB,CAAC7B,EAAYS,IAChB,MAAMgE,GAAsBC,EAAAA,EAAAA,cAAYC,GAAevE,EAAgBuE,IAAc,IAC/EC,GAAyBF,EAAAA,EAAAA,cAAYG,GAAQvG,QAAQK,IAAI,qBAAsBkG,IAAO,IAEtFC,GAAqBJ,EAAAA,EAAAA,cAAY,CAACK,EAAcC,KAClDtE,GAAWuE,IAAW,IAAUA,EAAa,CAACF,GAAeC,KAAS,GACvE,IACGtM,GAAemI,EAAAA,EAAAA,UAAQ,IAAMnH,KAAKwL,KAAK7E,EAAeE,IAAmB,CAACF,EAAcE,IACxF4E,EAAmB1M,EAAe8H,EAClC6E,EAAoBD,EAAmB5E,EACvC8E,GAAmBxE,EAAAA,EAAAA,UAAQ,IAAMX,EAAoBzI,MAAM2N,EAAmBD,IAAmB,CAACjF,EAAqBkF,EAAmBD,IAuBhJ,OACIrN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeC,SAAA,EAC1BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKG,IAAKkN,EAAYhN,IAAI,UAAU6G,QAAQ,UAC5CrH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,kBAAcC,EAAAA,EAAAA,KAAA,QAAMuF,MAAO,CAAE1B,MAAO,SAAU9D,SAAC,cAAgB,QACnEF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,2EAAoEC,EAAAA,EAAAA,KAAA,SAAS,+DAKzFA,EAAAA,EAAAA,KAACsN,EAAW,KACZzN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACpCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,KAAGuF,MAAO,CAACgI,MAAM,OAAOxN,SAAC,yMAGzBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,YACfD,EAAAA,EAAAA,MAAA,MAAIC,UAAU,YAAWC,SAAA,EACrBF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iCACJF,EAAAA,EAAAA,MAAA,KAAG0F,MAAO,CAACgI,MAAM,OAAOxN,SAAA,CAAC,iCACQC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,2FAAmF,WAGhIF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,iBACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,qCAC+BC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kFAAgF,WAG9HF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oCACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,mCACgCC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qIAAmI,cAItLF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,SAAa,2HAG7BC,EAAAA,EAAAA,KAACwN,EAAQ,CAAClJ,SAAU4B,GAAW2G,EAAmB,eAAgB3G,MAElElG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,aAAYC,UACvBC,EAAAA,EAAAA,KAAC8D,EAAAA,GAAM,CACHhE,UAAU,eACVkE,OArEK,CACjBd,QAASA,CAACC,EAAUC,KAAK,IAClBD,EACHE,YAAaD,EAAME,UAAY,UAAY,UAC3CC,UAAWH,EAAME,UAAY,oBAAsB,KACnD,UAAW,CACPD,YAAa,aAGrBG,KAAOL,IAAQ,IACRA,EACHM,OAAQ,OAEZC,OAAQA,CAACP,EAAUC,KAAK,IACjBD,EACHQ,gBAAiBP,EAAMQ,WAAa,UAAYR,EAAME,UAAY,UAAYH,EAASQ,gBACvFE,MAAOT,EAAMQ,WAAa,QAAUT,EAASU,MAC7C,UAAW,CACPF,gBAAiB,cAoDbM,QAAS4E,EACT1E,SAAUuB,GAAKmH,EAAmB,UAAWnH,EAAElD,OAC/CA,MAAOqG,EAAgB3E,MAAKR,GAAUA,EAAOlB,QAAUgG,EAAQE,UAC/DrE,YAAY,yBACZ,aAAW,8BAKnBrE,EAAAA,EAAAA,KAACyN,EAAAA,EAAU,CACPvL,cAAewL,GAAiBb,EAAmB,QAASa,GAC5DvL,gBAAiBwL,GAAmBd,EAAmB,UAAWc,GAClEvL,SAAUuH,EACVrJ,MAAOkI,EAAQlI,MACf+B,QAASmG,EAAQnG,QACjBC,cAAewG,KAInBjJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcC,SAAA,CAAEqI,EAAaN,eAAe,SAAS,eACpE9H,EAAAA,EAAAA,KAAA,OAAKF,UAAU,qBAAoBC,UAC/BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAC7BqN,EAAiBvH,OAAS,EACvBuH,EAAiBhO,KAAI,CAACJ,EAAgBiD,KAClCjC,EAAAA,EAAAA,KAAC4N,EAAAA,QAAU,CAEP5O,eAAgBA,EAChB6O,eAAgBlB,GAFX1K,MAMbpC,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CACKmH,IAAWlH,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UAACC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACnDsG,IAASvG,EAAAA,EAAAA,MAAA,OAAAE,SAAA,CAAK,UAAQqG,EAAM0H,mBAK7C9N,EAAAA,EAAAA,KAAC+N,EAAAA,QAAU,CACPvN,aAAcA,EACdC,aAAcA,EACdC,gBAAiB8L,KAErBxM,EAAAA,EAAAA,KAACgO,EAAAA,QAAM,MAGnB,C","sources":["componentes/cajaoferta.js","componentes/footer.js","componentes/paginacion.js","componentes/selectores.js","componentes/buscador.js","componentes/numero_observaciones.js","paginas/paginainicio.js"],"sourcesContent":["//import React, { useState } from 'react';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Ubi from '../imagenes/ubi.avif';  \r\nimport Indeed from '../imagenes/indeed.avif';  \r\nimport Convocatorias from '../imagenes/convocatorias_2024.avif';\r\nimport Buscojobs from '../imagenes/buscojobs.avif';\r\nimport Linkedin from '../imagenes/Linkedin.avif';\r\nimport Computrabajo from '../imagenes/computrabajo.avif';\r\nimport Bumeran from '../imagenes/bumeran.avif';\r\n\r\nimport './estiloscomponentes.css';\r\n\r\nconst plataformaImages = {\r\n    Indeed,\r\n    'Convocatorias de Trabajo': Convocatorias,\r\n    Buscojobs,\r\n    Linkedin,\r\n    Computrabajo,\r\n    Bumeran,\r\n};\r\n\r\nconst CajaOferta = ({ oferta_laboral }) => {\r\n    //const [copied, setCopied] = useState(false);\r\n\r\n    /*const handleButtonClick = (e) => {\r\n        e.stopPropagation(); \r\n\r\n        if (oferta_laboral.plataforma === 'Computrabajo') {\r\n            navigator.clipboard.writeText(oferta_laboral.link_pagina)\r\n                .then(() => {\r\n                    setCopied(true);\r\n                    setTimeout(() => setCopied(false), 2000); \r\n                })\r\n                .catch(err => console.error('Error al copiar el enlace', err));\r\n        } else {\r\n            window.open(oferta_laboral.link_pagina, '_blank');\r\n        }\r\n    };*/\r\n\r\n    const capitalizeFirstLetter = (text) => {\r\n        if (!text) return ''; \r\n        return text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\r\n    };\r\n\r\n    const platformImage = plataformaImages[oferta_laboral.plataforma];\r\n\r\n    return (\r\n        <div className='boxcajaoferta'>\r\n            <h2>{capitalizeFirstLetter(oferta_laboral.nom_oferta)}</h2>\r\n            <div className='division'></div>\r\n            <div className='empresa'>\r\n                <h3>{capitalizeFirstLetter(oferta_laboral.nom_empresa)}</h3>\r\n            </div>\r\n            <div className='lugar'>\r\n                <img src={Ubi} alt=\"Ubicación\" />\r\n                <h3>{oferta_laboral.lugar}</h3>\r\n            </div>\r\n            <div className='foto_plataforma'>\r\n                {platformImage && (\r\n                    <img src={platformImage} alt={`Logo ${oferta_laboral.plataforma}`} />\r\n                )}\r\n            </div>\r\n\r\n           {/* <button className='btn-official' onClick={handleButtonClick}>\r\n                {oferta_laboral.plataforma === 'Computrabajo' ? 'Copiar enlace' : 'Postular aquí'}\r\n            </button>\r\n\r\n            {copied && (\r\n                <div style={{\r\n                    backgroundColor: '#48b72f', \r\n                    color: 'white',\r\n                    padding: '20px',\r\n                    borderRadius: '5px',\r\n                    position: 'fixed',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)', \r\n                    zIndex: 1000, \r\n                    transition: 'opacity 0.5s',\r\n                    opacity: copied ? 1 : 0,\r\n                }}>\r\n                    ¡Enlace Copiado!\r\n                </div>\r\n            )}*/}\r\n        </div>\r\n    );\r\n};\r\n\r\nCajaOferta.propTypes = {\r\n    oferta_laboral: PropTypes.shape({\r\n        nom_oferta: PropTypes.string.isRequired,\r\n        nom_empresa: PropTypes.string.isRequired,\r\n        lugar: PropTypes.string.isRequired,\r\n        link_pagina: PropTypes.string.isRequired,\r\n        plataforma: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n};\r\n\r\nexport default CajaOferta;\r\n","import React from 'react'\r\nimport './estiloscomponentes.css'\r\n\r\nfunction footer() {\r\n  return (\r\n    <div className='footer'>\r\n        © Practicas Universitarias - Peru 2024\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default footer\r\n","import React, { useState, useEffect } from 'react';\r\nimport './estiloscomponentes.css'\r\n\r\nfunction Paginacion({ paginaActual, totalPaginas, onCambiarPagina }) {\r\n    const [rangoDePaginacion, setRangoDePaginacion] = useState(5);\r\n    useEffect(() => {\r\n        const ajustarRangoPaginacion = () => {\r\n            if (window.innerWidth <= 768) {\r\n                setRangoDePaginacion(3); \r\n            } else {\r\n                setRangoDePaginacion(9); \r\n            }\r\n        };\r\n        ajustarRangoPaginacion();\r\n\r\n        window.addEventListener('resize', ajustarRangoPaginacion);\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', ajustarRangoPaginacion);\r\n        };\r\n    }, []);\r\n\r\n    const generarNumerosPagina = () => {\r\n        let paginas = [];\r\n        const startPage = Math.max(1, paginaActual - Math.floor(rangoDePaginacion / 2));\r\n        const endPage = Math.min(startPage + rangoDePaginacion - 1, totalPaginas);\r\n\r\n        for (let i = startPage; i <= endPage; i++) {\r\n            paginas.push(i);\r\n        }\r\n\r\n        return paginas;\r\n    };\r\n\r\n    return (\r\n        <div className=\"paginacion\">\r\n            <button\r\n                onClick={() => onCambiarPagina(paginaActual - 1)}\r\n                disabled={paginaActual === 1}\r\n            >\r\n                Anterior\r\n            </button>\r\n            <div className=\"numero-pagina\">\r\n                {generarNumerosPagina().map((num, index) =>\r\n                    num === '...' ? (\r\n                        <span key={index} className=\"puntos-suspensivos\">...</span>\r\n                    ) : (\r\n                        <button\r\n                            key={index}\r\n                            className={num === paginaActual ? 'active' : ''}\r\n                            onClick={() => onCambiarPagina(num)}\r\n                        >\r\n                            {num}\r\n                        </button>\r\n                    )\r\n                )}\r\n            </div>\r\n            <button\r\n                onClick={() => onCambiarPagina(paginaActual + 1)}\r\n                disabled={paginaActual === totalPaginas}\r\n            >\r\n                Siguiente\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginacion;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport './estiloscomponentes.css'\r\n\r\nfunction Selectores({ onSelectLugar, onSelectEmpresa, empresas, lugar, empresa, departamentos }) {\r\n    // Opciones para react-select\r\n    const defaultLugarOption = { value: '', label: 'Seleccionar Departamento' };\r\n    const defaultEmpresaOption = { value: '', label: 'Seleccionar Empresas' };\r\n\r\n    const lugaresOptions = [defaultLugarOption, ...departamentos.map(dep => ({ value: dep, label: dep }))];\r\n\r\n    // Filtra empresas vacías antes de crear las opciones\r\n    const empresasOptions = [\r\n        defaultEmpresaOption, \r\n        ...empresas\r\n            .filter(emp => emp && emp.trim() !== '') // Filtra las empresas vacías o que solo tienen espacios\r\n            .map(emp => ({ value: emp, label: emp }))\r\n    ];\r\n\r\n    const customStyles = {\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            borderColor: state.isFocused ? '#47b72f' : '#d0d0d0', \r\n            boxShadow: state.isFocused ? '0 0 0 1px #47b72f' : null, \r\n            '&:hover': {\r\n                borderColor: '#47b72f', \r\n            },\r\n        }),\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            zIndex: 9999,\r\n        }),\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isSelected ? '#47b72f' : state.isFocused ? '#e0f7e9' : provided.backgroundColor, \r\n            color: state.isSelected ? 'white' : provided.color,\r\n            '&:hover': {\r\n                backgroundColor: '#e0f7e9', \r\n            },\r\n        }),\r\n    };\r\n\r\n    return (\r\n<div className='selectores'>\r\n    <Select\r\n        id=\"select-lugar\"\r\n        className='select-lugar'\r\n        styles={customStyles}\r\n        options={lugaresOptions}\r\n        value={lugaresOptions.find(option => option.value === lugar) || defaultLugarOption}\r\n        onChange={(selectedOption) => onSelectLugar(selectedOption.value)}\r\n        placeholder=\"Selecciona un lugar\"\r\n        aria-label=\"Selecciona un lugar\" \r\n    />\r\n\r\n    <Select\r\n        id=\"select-empresa\"\r\n        className='select-lugar'\r\n        styles={customStyles}\r\n        options={empresasOptions}\r\n        value={empresasOptions.find(option => option.value === empresa) || defaultEmpresaOption}\r\n        onChange={(selectedOption) => onSelectEmpresa(selectedOption.value)}\r\n        placeholder=\"Selecciona una empresa\"\r\n        aria-label=\"Selecciona una empresa\" \r\n    />\r\n</div>\r\n\r\n    );\r\n}\r\n\r\nexport default Selectores;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './estiloscomponentes.css'\r\n\r\nfunction Buscador({ onBuscar, onSugerencias }) {\r\n    const [palabraClave, setPalabraClave] = useState('');\r\n    const [sugerencias, setSugerencias] = useState([]);\r\n    const [mostrarSugerencias, setMostrarSugerencias] = useState(false);\r\n    const inputRef = useRef(null);\r\n    const sugerenciasRef = useRef(null);\r\n\r\n    const fetchSugerencias = async (query) => {\r\n        if (query.length > 2) {\r\n            try {\r\n                const response = await axios.get('https://buscadorempleos.onrender.com/sugerencias', {\r\n                    params: { palabra: query }\r\n                });\r\n                const nuevasSugerencias = response.data;\r\n                setSugerencias(nuevasSugerencias);\r\n                setMostrarSugerencias(nuevasSugerencias.length > 0);\r\n\r\n                if (onSugerencias) {\r\n                    onSugerencias(nuevasSugerencias);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching suggestions:', error);\r\n                setSugerencias([]);\r\n                setMostrarSugerencias(false);\r\n            }\r\n        } else {\r\n            setSugerencias([]);\r\n            setMostrarSugerencias(false);\r\n        }\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const value = e.target.value;\r\n        setPalabraClave(value);\r\n        fetchSugerencias(value);\r\n    };\r\n\r\n    const handleSuggestionClick = (sugerencia) => {\r\n        console.log(\"Sugerencia seleccionada:\", sugerencia);\r\n        setPalabraClave(sugerencia);\r\n        setMostrarSugerencias(false);\r\n        if (onBuscar) {\r\n            onBuscar(sugerencia); \r\n        }\r\n    };\r\n\r\n    const handleClickOutside = (event) => {\r\n        if (\r\n            inputRef.current && !inputRef.current.contains(event.target) &&\r\n            sugerenciasRef.current && !sugerenciasRef.current.contains(event.target)\r\n        ) {\r\n            setMostrarSugerencias(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mousedown', handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener('mousedown', handleClickOutside);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"buscador\">\r\n            <h3>Buscar Oferta <span style={{ color: '#47b72f' }}>Laboral</span></h3>\r\n            <div className='elementos_buscador'>\r\n\r\n\r\n                <div ref={inputRef}>\r\n                    <input\r\n                        className=\"input_cajainiciobox\"\r\n                        type=\"text\"\r\n                        value={palabraClave}\r\n                        onChange={handleChange}\r\n                        onKeyPress={(e) => {\r\n                            if (e.key === 'Enter') {\r\n                                onBuscar(palabraClave);\r\n                            }\r\n                        }}\r\n                        placeholder=\"Ingrese palabra clave\"\r\n                    />\r\n                    {mostrarSugerencias && (\r\n                        <ul className=\"sugerencias\" ref={sugerenciasRef}>\r\n                            {sugerencias.map((sugerencia, index) => (\r\n                                <li key={index} onClick={() => handleSuggestionClick(sugerencia)}>\r\n                                    {sugerencia}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n                <button className=\"btn_cajainiciobox\" onClick={() => onBuscar(palabraClave)}>Buscar</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Buscador;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './estiloscomponentes.css';\r\n\r\nfunction NumeroObservaciones() {\r\n    const [conteo, setConteo] = useState(0);\r\n    const [conteo2, setConteo2] = useState(0);\r\n    const [conteo3, setConteo3] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const obtenerConteos = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const [responseDiaAnterior, responseSemana, responseTotal] = await Promise.all([\r\n                    axios.get('https://buscadorempleos.onrender.com/contarObservacionesDiaAnterior'),\r\n                    axios.get('https://buscadorempleos.onrender.com/contarObservacionesSemana'),\r\n                    axios.get('https://buscadorempleos.onrender.com/contarObservacionesTotal')\r\n                ]);\r\n\r\n                setConteo(responseDiaAnterior.data.count || 0);\r\n                setConteo2(responseSemana.data.count || 0);\r\n                setConteo3(responseTotal.data.count || 0);\r\n            } catch (err) {\r\n                console.error(\"Error al obtener los conteos:\", err);\r\n                setError(\"Error al obtener los conteos. Intenta de nuevo más tarde.\");\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        obtenerConteos();\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div className=\"loading\" style={{ margin: '50px' }}><div className=\"spinner\"></div></div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p>{error}</p>;\r\n    }\r\n\r\n    return (\r\n        <div className='total_observaciones'>\r\n            <div className='inserciones'>\r\n                <div className='dia'>\r\n                    <p>{conteo.toLocaleString('es-PE')}</p>\r\n                    <h5>Ofertas laborales hoy</h5>\r\n                </div>\r\n                <div className='semana'>\r\n                    <p>{conteo2.toLocaleString('es-PE')}</p>\r\n                    <h5>Ofertas laborales últimos 7 días</h5>\r\n                </div>\r\n                <div className='total'>\r\n                    <p>{conteo3.toLocaleString('es-PE')}</p>\r\n                    <h5>Total ofertas menores a 20 días</h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NumeroObservaciones;\r\n","import React, { useState, useMemo, useCallback, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select';\r\nimport '../componentes/estiloscomponentes.css'\r\nimport portadaImg from '../imagenes/portada.avif';\r\nimport CajaOferta from '../componentes/cajaoferta';\r\nimport Buscador from '../componentes/buscador';\r\nimport Paginacion from '../componentes/paginacion';\r\nimport Inserciones from '../componentes/numero_observaciones';\r\nimport Selectores from '../componentes/selectores';\r\nimport Footer from '../componentes/footer';\r\nfunction PaginaInicio() {\r\n    const [resultados, setResultados] = useState([]);\r\n    const [resultadosFiltrados, setResultadosFiltrados] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    const [paginaActual, setPaginaActual] = useState(1);\r\n    const [totalOfertas, setTotalOfertas] = useState(0);\r\n    const [ofertasPorPagina, setOfertasPorPagina] = useState(14);\r\n    const [filtros, setFiltros] = useState({ palabraClave: '', lugar: '', empresa: '', carrera: '' });\r\n    const listaDepartamentos = useMemo(() => [\r\n        'Arequipa', 'Lima', 'Cusco', 'Puno', 'Apurimac', 'Amazonas', 'Ancash', 'Ayacucho',\r\n        'Cajamarca', 'Callao', 'Huancavelica', 'Huanuco', 'Ica', 'Junin', 'La Libertad',\r\n        'Lambayeque', 'Loreto', 'Madre de Dios', 'Moquegua', 'Pasco', 'Piura', 'San Martin',\r\n        'Tacna', 'Tumbes', 'Ucayali', 'Peru'\r\n    ], []);\r\n    const opcionesCarrera = [\r\n        { value: '', label: 'Seleccionar Carrera' },\r\n        { value: 'Administración', label: 'Administración' },\r\n        { value: 'Arquitectura', label: 'Arquitectura' },\r\n        { value: 'Biología', label: 'Biología' },\r\n        { value: 'Ciencia_de_la_Computación', label: 'Ciencia de la Computación' },\r\n        { value: 'Ciencia_Política', label: 'Ciencia Política' },\r\n        { value: 'Ciencias_de_la_Comunicación', label: 'Ciencias de la Comunicación' },\r\n        { value: 'Contabilidad', label: 'Contabilidad' },\r\n        { value: 'Derecho', label: 'Derecho' },\r\n        { value: 'Diseñador_Grafico', label: 'Diseño Gráfico' },\r\n        { value: 'Economía', label: 'Economía' },\r\n        { value: 'Educación', label: 'Educación' },\r\n        { value: 'Enfermería', label: 'Enfermería' },\r\n        { value: 'Estadística', label: 'Estadística' },\r\n        { value: 'Farmacia_y_Bioquímica', label: 'Farmacia y Bioquímica' },\r\n        { value: 'Gastronomía', label: 'Gastronomía' },\r\n        { value: 'Historia', label: 'Historia' },\r\n        { value: 'Hotelería_y_Turismo', label: 'Hotelería y Turismo' },\r\n        { value: 'Ingeniería_Agrícola', label: 'Ingeniería Agronómica y Agrícola' },\r\n        { value: 'Ingeniería_Ambiental', label: 'Ingeniería Ambiental' },\r\n        { value: 'Ingeniería_Civil', label: 'Ingeniería Civil' },\r\n        { value: 'Ingeniería_de_Industrias_alimentarias', label: 'Ingeniería de Industria Alimentaria' },\r\n        { value: 'Ingeniería_de_Minas', label: 'Ingeniería de Minas' },\r\n        { value: 'Ingeniería_de_Sistemas', label: 'Ingeniería de Sistemas' },\r\n        { value: 'Ingeniería_Eléctrica', label: 'Ingeniería Eléctrica' },\r\n        { value: 'Ingeniería_Industrial', label: 'Ingeniería Industrial' },\r\n        { value: 'Ingeniería_Mecánica', label: 'Ingeniería Mecánica' },\r\n        { value: 'Ingeniería_Mecatrónica', label: 'Ingeniería Mecatrónica' },\r\n        { value: 'Ingeniería_Química', label: 'Ingeniería Química' },\r\n        { value: 'Marketing', label: 'Marketing' },\r\n        { value: 'Medicina', label: 'Medicina' },\r\n        { value: 'Medicina_Veterinaria', label: 'Medicina Veterinaria' },\r\n        { value: 'Negocios_Internacionales', label: 'Negocios Internacionales' },\r\n        { value: 'Nutrición', label: 'Nutrición' },\r\n        { value: 'Odontología', label: 'Odontología' },\r\n        { value: 'Psicología', label: 'Psicología' },\r\n        { value: 'Publicidad_y_multimedia', label: 'Publicidad y Multimedia' },\r\n        { value: 'Recursos_Humanos', label: 'Recursos Humanos' },\r\n        { value: 'Ventas', label: 'Ventas' },\r\n        { value: 'Almacén', label: 'Almacén' },\r\n    ];\r\n    const departamentosFiltrados = useMemo(() => {\r\n        const departamentos = [...new Set(resultadosFiltrados.map(oferta =>\r\n            listaDepartamentos.find(departamento => oferta.lugar.includes(departamento))\r\n        ))];\r\n        return departamentos.filter(Boolean).sort((a, b) => a.localeCompare(b));\r\n    }, [resultadosFiltrados, listaDepartamentos]);\r\n    useEffect(() => {\r\n        const ajustarOfertasPorPagina = () => {\r\n            setOfertasPorPagina(window.innerWidth <= 768 ? 10 : 20);\r\n        };\r\n        ajustarOfertasPorPagina();\r\n        window.addEventListener('resize', ajustarOfertasPorPagina);\r\n        return () => window.removeEventListener('resize', ajustarOfertasPorPagina);\r\n    }, []);\r\n    useEffect(() => {\r\n        const fetchOfertas = async () => {\r\n            setLoading(true);\r\n            try {\r\n                const response = await axios.get('https://buscadorempleos.onrender.com/Ofertas-Laborales');\r\n                setResultados(response.data);\r\n                setResultadosFiltrados(response.data);\r\n                setTotalOfertas(response.data.length);\r\n                setPaginaActual(1);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setError(error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchOfertas();\r\n    }, []);\r\n    const empresasFiltradas = useMemo(() =>\r\n        [...new Set(resultadosFiltrados.map(oferta => oferta.nom_empresa))],\r\n        [resultadosFiltrados]\r\n    );\r\n    useEffect(() => {\r\n        const filtrarResultados = () => {\r\n            const { palabraClave, lugar, empresa, carrera } = filtros;\r\n            let filtrados = resultados;\r\n            if (palabraClave) {\r\n                filtrados = filtrados.filter(oferta =>\r\n                    oferta.nom_oferta.toLowerCase().includes(palabraClave.toLowerCase())\r\n                );\r\n            }\r\n            if (lugar) {\r\n                filtrados = filtrados.filter(oferta =>\r\n                    oferta.lugar.toLowerCase().includes(lugar.toLowerCase())\r\n                );\r\n            }\r\n            if (empresa) {\r\n                filtrados = filtrados.filter(oferta =>\r\n                    oferta.nom_empresa.toLowerCase().includes(empresa.toLowerCase())\r\n                );\r\n            }\r\n            const diccionarios = {\r\n                Administración: ['administracion', 'Administrador', 'logistica', 'nominas', 'creditos y cobranzas', 'comercial', 'costos', 'planeamiento', 'trade'],\r\n                Arquitectura: ['Arquitectura'],\r\n                Biología: ['Biologia', 'Microbiologia'],\r\n                Ciencia_de_la_Computación: ['Ciencia de la Computacion', 'programacion', 'base de datos', 'Ciberseguridad', 'cloud', 'programador', 'estructuras de datos'],\r\n                Ciencia_Política: ['Politica'],\r\n                Ciencias_de_la_Comunicación: ['comunicacion', 'Periodismo', 'Audiovisuales', 'relaciones publicas', 'comunicador social', 'redes sociales', 'comunicador', 'periodista'],\r\n                Contabilidad: ['Contabilidad', 'impuestos', 'contable', 'costos', 'creditos y cobranzas'],\r\n                Derecho: ['Derecho', 'abogado', 'litigio', 'legal', 'abogada'],\r\n                Diseñador_Grafico: ['diseñador grafico', 'grafico', 'diseño gráfico'],\r\n                Economía: ['Economia', 'finanzas', 'mercado', 'inversion', 'nominas', 'creditos y cobranzas', 'comercial'],\r\n                Educación: ['Educacion', 'docente', 'profesor', 'profesora'],\r\n                Enfermería: ['Enfermeria', 'enfermera'],\r\n                Estadística: ['Estadistica'],\r\n                Farmacia_y_Bioquímica: ['farmacia', 'bioquimica', 'laboratorio'],\r\n                Gastronomía: ['Gastronomia', 'gastronomica', 'gastronomico', 'cocinero', 'cocinera', 'cocina'],\r\n                Hotelería_y_Turismo: ['Hoteleria', 'turismo', 'turistico'],\r\n                Ingeniería_Agrícola: ['Ingenieria Agricola', 'Ingeniero Agronomo', 'agronomia', 'agronomo', 'agronomia', 'agroindustrial', 'Ingenieria Agronoma'],\r\n                Ingeniería_Ambiental: ['Ingenieria Ambiental', 'ambiental', 'SHEQ'],\r\n                Ingeniería_de_Industrias_alimentarias: ['alimentaria'],\r\n                Ingeniería_Civil: ['Ingenieria Civil', 'civil', 'urbano', 'urbana'],\r\n                Ingeniería_de_Minas: ['Ingeniería de Minas', 'mina', 'mineria', 'minero', 'SHEQ'],\r\n                Ingeniería_de_Sistemas: ['Ingeniería de Sistemas', 'Ingeniero de sistemas', 'Ing Sistemas', 'Ing. sistemas', 'react', 'programación', 'angular', 'sql', 'data', 'devops', ' ti ', 'php', 'soporte tecnico', 'Seguridad de la Informacion', 'Analisis De Datos', 'cloud', 'Data Analytics', 'Mysql'],\r\n                Ingeniería_Eléctrica: ['electrica', 'electricista', 'Transformadores', 'electronica', 'electronico', 'ING. ELECTRICA'],\r\n                Ingeniería_Industrial: ['Ingenieria Industrial', 'Industrial', 'Ing industrial', 'Ing. Industrial', 'logistica', 'nominas', 'creditos y cobranzas', 'comercial', 'costos', 'planeamiento', 'trade'],\r\n                Ingeniería_Mecánica: ['mecanica', 'mecanico'],\r\n                Ingeniería_Mecatrónica: ['mecatronica', 'mecatronica'],\r\n                Ingeniería_Química: ['quimica', 'quimico'],\r\n                Marketing: ['Marketing', 'Publicidad', ' marca ', 'Branding', 'trade'],\r\n                Medicina: ['Medicina'],\r\n                Medicina_Veterinaria: ['Veterinaria', 'veterinario', 'zootecnia'],\r\n                Negocios_Internacionales: ['Negocios Internacionales', 'comercio', 'exportacion', 'comercial', 'aduanas', 'logistica'],\r\n                Nutrición: ['Nutricion'],\r\n                Odontología: ['Odontologia', 'dental'],\r\n                Psicología: ['Psicologia', 'psicologo', 'psicologa', 'seleccion'],\r\n                Publicidad_y_multimedia: ['publicidad', 'multimedia'],\r\n                Recursos_Humanos: ['Recursos humanos', 'seleccion'],\r\n                Ventas: ['Ventas'],\r\n                Almacén: ['almacen', 'inventarios', 'carga'],\r\n            };\r\n            if (carrera) {\r\n                filtrados = filtrados.filter(oferta =>\r\n                    diccionarios[carrera]?.some(term =>\r\n                        oferta.nom_oferta.toLowerCase().includes(term.toLowerCase())\r\n                    )\r\n                );\r\n            }\r\n            setResultadosFiltrados(filtrados);\r\n            setTotalOfertas(filtrados.length);\r\n            setPaginaActual(1);\r\n        };\r\n        filtrarResultados();\r\n    }, [resultados, filtros]);\r\n    const handleCambiarPagina = useCallback(nuevaPagina => setPaginaActual(nuevaPagina), []);\r\n    const handleLinkSeleccionado = useCallback(link => console.log(\"Link seleccionado:\", link), []);\r\n\r\n    const handleFiltroChange = useCallback((nombreFiltro, valor) => {\r\n        setFiltros(prevFiltros => ({ ...prevFiltros, [nombreFiltro]: valor }));\r\n    }, []);\r\n    const totalPaginas = useMemo(() => Math.ceil(totalOfertas / ofertasPorPagina), [totalOfertas, ofertasPorPagina]);\r\n    const indexOfLastOffer = paginaActual * ofertasPorPagina;\r\n    const indexOfFirstOffer = indexOfLastOffer - ofertasPorPagina;\r\n    const ofertasMostradas = useMemo(() => resultadosFiltrados.slice(indexOfFirstOffer, indexOfLastOffer), [resultadosFiltrados, indexOfFirstOffer, indexOfLastOffer]);\r\n    const customStyles = {\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            borderColor: state.isFocused ? '#47b72f' : '#d0d0d0',\r\n            boxShadow: state.isFocused ? '0 0 0 1px #47b72f' : null,\r\n            '&:hover': {\r\n                borderColor: '#47b72f',\r\n            },\r\n        }),\r\n        menu: (provided) => ({\r\n            ...provided,\r\n            zIndex: 9999,\r\n        }),\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isSelected ? '#47b72f' : state.isFocused ? '#e0f7e9' : provided.backgroundColor,\r\n            color: state.isSelected ? 'white' : provided.color,\r\n            '&:hover': {\r\n                backgroundColor: '#e0f7e9',\r\n            },\r\n        }),\r\n    };\r\n    return (\r\n        <div className='pagina-inicio'>\r\n            <div className='portada'>\r\n                <img src={portadaImg} alt='Portada' loading=\"lazy\" />\r\n                <div className='contentform'>\r\n                    <h1>Oportunidades <span style={{ color: 'white' }}>Laborales</span> </h1>\r\n                    <h3>Descubre oportunidades laborales para estudiantes y recién egresados<br></br> en diversas carreras técnicas y profesionales.</h3>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Inserciones />\r\n            <div className=\"tips-busqueda-container\">\r\n                <h2>Consejos de Busqueda</h2>\r\n                <p style={{width:'80%'}}>\r\n                    Al buscar empleo, es fundamental ingresar palabras clave relacionadas con tu carrera para asegurarte de no perderte ninguna oportunidad. Aquí tienes algunas sugerencias para diferentes campos:\r\n                </p>\r\n                <div className='imgtip'></div>\r\n                <ul className=\"tips-list\">\r\n                    <li>\r\n                        <h3>Ingeniería Agronómica</h3>\r\n                        <p style={{width:'90%'}}>\r\n                            Utiliza palabras clave como: <strong>'Ingeniería Agrícola', 'Ingeniero Agrónomo', 'Agronomía', 'Agroindustrial'</strong>.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Economía</h3>\r\n                        <p>\r\n                            Considera usar términos como: <strong>'finanzas', 'mercado', 'inversiones', 'nóminas', 'créditos y cobranzas'</strong>.\r\n                        </p>\r\n                    </li>\r\n                    <li>\r\n                        <h3>Ciencias de la Comunicación</h3>\r\n                        <p>\r\n                            Busca con palabras clave como: <strong>'comunicación', 'periodismo', 'audiovisuales', 'relaciones públicas', 'comunicador social', 'redes sociales', 'periodista'</strong>.\r\n                        </p>\r\n                    </li>\r\n                </ul>\r\n                <p>\r\n                    <strong>Tip:</strong> Usa combinaciones específicas para ampliar tus opciones laborales y mejorar tus resultados en la búsqueda.\r\n                </p>\r\n            </div>\r\n            <Buscador onBuscar={palabra => handleFiltroChange('palabraClave', palabra)} />\r\n\r\n            <div className='selectores'>\r\n                <Select\r\n                    className='select-lugar'\r\n                    styles={customStyles}\r\n                    options={opcionesCarrera}\r\n                    onChange={e => handleFiltroChange('carrera', e.value)}\r\n                    value={opcionesCarrera.find(option => option.value === filtros.carrera)}\r\n                    placeholder=\"Selecciona una carrera\"\r\n                    aria-label=\"Selecciona una carrera\"\r\n                />\r\n            </div>\r\n\r\n\r\n            <Selectores\r\n                onSelectLugar={selectedLugar => handleFiltroChange('lugar', selectedLugar)}\r\n                onSelectEmpresa={selectedEmpresa => handleFiltroChange('empresa', selectedEmpresa)}\r\n                empresas={empresasFiltradas}\r\n                lugar={filtros.lugar}\r\n                empresa={filtros.empresa}\r\n                departamentos={departamentosFiltrados}\r\n\r\n            />\r\n\r\n            <div className='totalofertas'>{totalOfertas.toLocaleString('es-PE')} Empleos</div>\r\n            <div className='contenidoprincipal'>\r\n                <div className='contenedordecajas'>\r\n                    {ofertasMostradas.length > 0 ? (\r\n                        ofertasMostradas.map((oferta_laboral, index) => (\r\n                            <CajaOferta\r\n                                key={index}\r\n                                oferta_laboral={oferta_laboral}\r\n                                navigateToLink={handleLinkSeleccionado}\r\n                            />\r\n                        ))\r\n                    ) : (\r\n                        <div>\r\n                            {loading && <div className=\"loading\"><div className=\"spinner\"></div></div>}\r\n                            {error && <div>Error: {error.message}</div>}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <Paginacion\r\n                paginaActual={paginaActual}\r\n                totalPaginas={totalPaginas}\r\n                onCambiarPagina={handleCambiarPagina}\r\n            />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaginaInicio;\r\n"],"names":["plataformaImages","Indeed","Convocatorias","Buscojobs","Linkedin","Computrabajo","Bumeran","_ref","oferta_laboral","capitalizeFirstLetter","text","split","map","word","charAt","toUpperCase","slice","toLowerCase","join","platformImage","plataforma","_jsxs","className","children","_jsx","nom_oferta","nom_empresa","src","Ubi","alt","lugar","concat","paginaActual","totalPaginas","onCambiarPagina","rangoDePaginacion","setRangoDePaginacion","useState","useEffect","ajustarRangoPaginacion","window","innerWidth","addEventListener","removeEventListener","onClick","disabled","generarNumerosPagina","paginas","startPage","Math","max","floor","endPage","min","i","push","num","index","onSelectLugar","onSelectEmpresa","empresas","empresa","departamentos","defaultLugarOption","value","label","defaultEmpresaOption","lugaresOptions","dep","empresasOptions","filter","emp","trim","customStyles","control","provided","state","borderColor","isFocused","boxShadow","menu","zIndex","option","backgroundColor","isSelected","color","Select","id","styles","options","find","onChange","selectedOption","placeholder","onBuscar","onSugerencias","palabraClave","setPalabraClave","sugerencias","setSugerencias","mostrarSugerencias","setMostrarSugerencias","inputRef","useRef","sugerenciasRef","handleClickOutside","event","current","contains","target","document","style","ref","type","e","async","query","length","nuevasSugerencias","axios","get","params","palabra","data","error","console","fetchSugerencias","onKeyPress","key","sugerencia","log","handleSuggestionClick","conteo","setConteo","conteo2","setConteo2","conteo3","setConteo3","loading","setLoading","setError","responseDiaAnterior","responseSemana","responseTotal","Promise","all","count","err","obtenerConteos","margin","toLocaleString","resultados","setResultados","resultadosFiltrados","setResultadosFiltrados","setPaginaActual","totalOfertas","setTotalOfertas","ofertasPorPagina","setOfertasPorPagina","filtros","setFiltros","carrera","listaDepartamentos","useMemo","opcionesCarrera","departamentosFiltrados","Set","oferta","departamento","includes","Boolean","sort","a","b","localeCompare","ajustarOfertasPorPagina","response","fetchOfertas","empresasFiltradas","filtrarResultados","filtrados","diccionarios","Administración","Arquitectura","Biología","Ciencia_de_la_Computación","Ciencia_Política","Ciencias_de_la_Comunicación","Contabilidad","Derecho","Diseñador_Grafico","Economía","Educación","Enfermería","Estadística","Farmacia_y_Bioquímica","Gastronomía","Hotelería_y_Turismo","Ingeniería_Agrícola","Ingeniería_Ambiental","Ingeniería_de_Industrias_alimentarias","Ingeniería_Civil","Ingeniería_de_Minas","Ingeniería_de_Sistemas","Ingeniería_Eléctrica","Ingeniería_Industrial","Ingeniería_Mecánica","Ingeniería_Mecatrónica","Ingeniería_Química","Marketing","Medicina","Medicina_Veterinaria","Negocios_Internacionales","Nutrición","Odontología","Psicología","Publicidad_y_multimedia","Recursos_Humanos","Ventas","Almacén","_diccionarios$carrera","some","term","handleCambiarPagina","useCallback","nuevaPagina","handleLinkSeleccionado","link","handleFiltroChange","nombreFiltro","valor","prevFiltros","ceil","indexOfLastOffer","indexOfFirstOffer","ofertasMostradas","portadaImg","Inserciones","width","Buscador","Selectores","selectedLugar","selectedEmpresa","CajaOferta","navigateToLink","message","Paginacion","Footer"],"sourceRoot":""}